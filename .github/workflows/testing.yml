name: pytest

on:
  push:
    branches:
      - main  # Your branch name
    paths:
      - '**/*.py'  # Trigger for changes in Python files
  pull_request:
    branches:
      - main  # Your branch name
    paths:
      - '**/*.py'  # Trigger for changes in Python files

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt  # Install dependencies
        pip install coverage pytest

    - name: Run tests with pytest
      run: |
          coverage run -m pytest
          coverage xml -o coverage.xml
          mv .coverage .coverage.${{ matrix.python-version }}
          
    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: |
          .coverage.${{ matrix.python-version }}
          coverage.xml
        include-hidden-files: true
        if-no-files-found: error

  coverage:
      name: Combine & check coverage
      if: always()
      needs: tests
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v5
          with:
            python-version: "3.13"

        - name: Download coverage data
          uses: actions/download-artifact@v4
          with:
            pattern: coverage-data-*
            merge-multiple: true
            path: coverage-data

        - name: Combine and check coverage
          run: |
            pip install coverage[toml]

            # Move all coverage files into root
            find coverage-data -name ".coverage.*" -exec mv {} . \;

            coverage combine
            coverage html --skip-covered --skip-empty

            echo "### Coverage Report" >> $GITHUB_STEP_SUMMARY
            coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

            coverage report --fail-under=100

        - name: Upload HTML report if check failed
          if: ${{ failure() }}
          uses: actions/upload-artifact@v4
          with:
            name: html-report
            path: htmlcov